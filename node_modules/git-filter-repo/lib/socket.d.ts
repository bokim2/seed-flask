/**
 * Copyright 2021 Silicon Hills LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
import { Socket as NetSocket, Server } from 'net';
import { HashMap } from './types';
export default class Socket {
    name: string;
    protected commands: HashMap<(...args: any[]) => any>;
    path: string;
    server?: Server;
    chunks: HashMap<string[]>;
    constructor(name?: string, commands?: HashMap<(...args: any[]) => any>);
    handleCommand(commandName: string, data: any): Promise<((...args: any[]) => any) | null>;
    handleData(chunk: string, client: Client): Promise<void>;
    parseChunks<T = any>(chunks: string | string[]): T;
    handleCleanup(): void;
    connect(): Promise<void>;
    close(): Promise<void>;
}
export interface Client extends NetSocket {
    id: string;
}
